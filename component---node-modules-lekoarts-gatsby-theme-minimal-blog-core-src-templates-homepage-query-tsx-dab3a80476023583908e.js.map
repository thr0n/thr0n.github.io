{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-dab3a80476023583908e.js","mappings":"2OAqBA,EAba,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OACX,mBACEC,GAAI,CACFC,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAU,OAASL,GAAI,EAAGM,EAAG,CAAEC,QAAQ,mBAC7CA,QAAQ,mBAGTT,I,kFCTCU,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,2BACA,+KAMJH,EAAWI,gBAAiB,E,qBChBtBN,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,gCACA,qBACA,mBAAG,cAAGE,WAAW,IACb,KAAQ,uCADT,oBAGH,mBAAG,cAAGA,WAAW,IACb,KAAQ,wCADT,iBAOPL,EAAWI,gBAAiB,ECG5B,IAqBA,EArBiB,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,MAClB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SACVC,GAAcC,EAAAA,EAAAA,KAAdD,UAER,OACE,QAAC,IAAD,MACE,cAAIrB,GAAIuB,EAAAA,GAAiBF,IACzB,mBAASrB,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,GAAIuB,EAAG,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,GAAI,GAAKlB,QAAQ,kBACvE,QAAC,EAAD,QAEF,QAAC,IAAD,CAAOmB,KAAK,iBACV,QAAC,EAAAC,KAAD,CAAMC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAL,IAAiBC,IAAzC,oBAEF,QAAC,IAAD,CAASH,MAAOA,EAAOc,UAAU,KACjC,QAAC,EAAD,MACE,QAAC,EAAD,SC5CR,MCQe,YAAuD,IAAjBlB,EAAgB,oBAEzDmB,EACNnB,EADFoB,KAAQD,QAGV,OAAO,gBAAC,EAAD,eAAUf,MAAOe,EAAQE,OAAWrB,M,gFCc7C,IAjBiB,SAAC,GAAyB,IAAvBsB,EAAsB,EAAtBA,KAClB,GAA+BjB,EAAAA,EAAAA,KAAvBkB,EAAR,EAAQA,SAAUjB,EAAlB,EAAkBA,SAElB,OACE,gBAAC,WAAD,KACGgB,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,WAAD,CAAgBC,IAAKF,EAAIG,QACpBF,GAAF,KACD,gBAAC,KAAD,CAAOG,GAAId,EAAAA,KAAMC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAL,IAAiBiB,EAAjB,IAA6BE,EAAIG,OACjEH,EAAIK,a,gHCiBjB,EAjBqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASb,SAAAA,OAAT,gBACnB,QAAC,KAAD,CAAK9B,GAAI,IACP,QAAC,KAAD,CAAOyC,GAAId,EAAAA,KAAMC,GAAIe,EAAKH,KAAMzC,GAAI,CAAEyB,SAAU,CAAC,EAAG,EAAG,GAAIoB,MAAM,SAC9DD,EAAKE,QAER,aAAG9C,GAAI,CAAE6C,MAAM,YAAcnB,GAAI,EAAGnB,EAAG,CAAEsC,MAAM,aAAgBpB,SAAU,CAAC,EAAG,EAAG,MAC9E,oBAAOmB,EAAKG,MACXH,EAAKT,MAAQJ,IACZ,QAAC,WAAD,YAEE,QAAC,IAAD,CAAUI,KAAMS,EAAKT,WCH/B,EARgB,SAAC,GAAD,IAAGlB,EAAH,EAAGA,MAAH,IAAU+B,UAAAA,OAAV,eAA0BjB,SAAAA,OAA1B,gBACd,mBAAS/B,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,IAAM+C,UAAWA,GACxC/B,EAAMoB,KAAI,SAACO,GAAD,OACT,QAAC,EAAD,CAAcJ,IAAKI,EAAKH,KAAMG,KAAMA,EAAMb,SAAUA","sources":["webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://thr0n.github.io/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://thr0n.github.io/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://thr0n.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Hi.`}</h2>\n    <p>{`I'm Hendrik, Hamburg based software engineer passionate about full stack development, software architecture,\ndistributed systems, and web technologies.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h4>{`Projects`}</h4>\n    <hr></hr>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://random-episode.netlify.app/\"\n      }}>{`random episode`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://react-macke.firebaseapp.com/\"\n      }}>{`react-macke`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","import * as React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Link as TLink, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["children","sx","mb","ul","margin","padding","li","listStyle","a","variant","layoutProps","_frontmatter","MDXContent","components","props","mdxType","isMDXComponent","parentName","posts","useMinimalBlogConfig","basePath","blogPath","siteTitle","useSiteMetadata","visuallyHidden","p","fontSize","mt","text","Link","to","replaceSlashes","showTags","allPost","data","nodes","tags","tagsPath","map","tag","i","key","slug","as","name","post","color","title","date","className"],"sourceRoot":""}